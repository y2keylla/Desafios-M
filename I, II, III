<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Desafios Mari</title>
</head>
<body>
    <h2>Tabela da Verdade</h2>
    <p>Tabela verdade é um dispositivo utilizado no estudo da lógica matemática. Com o uso desta tabela é possível definir o valor lógico de uma proposição, isto é, saber quando uma sentença é verdadeira ou falsa.

        Em lógica, as proposições representam pensamentos completos e indicam afirmações de fatos ou ideias.
        
        Utiliza-se a tabela verdade em proposições compostas, ou seja, sentenças formadas por proposições simples, sendo que o resultado do valor lógico depende apenas do valor de cada proposição.
        
        Para combinar proposições simples e formar proposições compostas são utilizados conectivos lógicos. Estes conectivos representam operações lógicas.</p>

    <img src="https://static.todamateria.com.br/upload/ta/be/tabelaverdadeconectivo1-cke.jpg" alt="Tabela da Verdade">

    <h2>Variavel</h2>
    <p>Variáveis em Python são lugares reservados na memória de um dispositivo para o armazenamento de dados que posteriormente vão ser usados na execução de uma solução digital, Essas variáveis podem ter formatos e tamanhos diferentes, entre outras particularidades.

    Para declarar as variáveis no Python, é preciso seguir algumas regrinhas, caso contrário, o interpretador não vai reconhecer o comando e uma mensagem de erro aparecerá.
        
    Por exemplo, você nunca deve nomear uma variável começando com um número ou símbolo (5 ou %, por exemplo), mas sim com uma letra minúscula ou underline.
        
    O restante do nome, aí sim, pode ser escrito com os outros tipos de caracteres.
        
    Outro cuidado que é preciso ter é não utilizar palavras que já fazem parte dos códigos da linguagem Python para declarar variáveis.</p>

    <h2>Tupla</h2>
    <p>Tupla é um tipo de estrutura de dados utilizada em Python que funciona de modo semelhante a uma lista, entretanto, com a característica principal de ser imutável. Isso significa que quando uma tupla é criada não é possível adicionar, alterar ou remover seus elementos. Geralmente, ela é utilizada para adicionar tipos diferentes de informações, porém, com a quantidade de elementos definidos.

    Podemos utilizar uma tupla de dois elementos, por exemplo, para indicar a sigla do estado em uma posição e o nome dele em outra. Portanto, ela é uma boa opção quando queremos trabalhar com informações diferentes em uma mesma variável e quando queremos que esses dados não sofram alterações.
        
    Sua característica de imutabilidade oferece segurança nas informações armazenadas. Por isso, uma das finalidades da tupla é armazenar uma sequência de dados que não será modificada em outras partes do código.
        
    Entretanto, ela não é completamente imutável, pois quando armazena outro objeto, como uma lista, os dados armazenados nesse elemento podem ser modificados. É preciso entender, porém, que nesse caso não é alterado a estrutura da tupla, apenas o conteúdo desse objeto, que é passado por referência.</p>

    <h2>Lista</h2>
    <p>Uma Lista (list) em Python, nada mais é que uma coleção ordenada de valores, separados por vírgula e dentro de colchetes [].

    Elas são utilizadas para armazenar diversos itens em uma única variável.

    # Exemplo de lista:
    lista = ['Python', 'Academy']
    
    print(lista)</p>

    <h2>Dicionário</h2>
    <p>Os dicionários são coleções de itens e seus elementos são armazenados de forma não ordenada.

    Seus elementos contém uma chave e valor, isto é:
        
    Uma <strong>chave</strong> que vai servir para indexar (posicionar) determinado elemento no dicionário.
    Um <strong>valor</strong> que contém… Bem, um valor aceita diversos tipos: listas, outros dicionários, inteiros, strings e etc.
    Sua sintaxe básica é: {'chave': 'valor'}. Utiliza-se {} para delimitar o dicionário e a chave é separada do valor por dois pontos :.</p>

</body>
</html>
